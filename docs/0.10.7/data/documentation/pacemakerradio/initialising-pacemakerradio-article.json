{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/Initialising-PacemakerRadio-article"},"abstract":[{"text":"How to validate your client and start using the PacemakerRadio SDK with Tuned Global APIs","type":"text"}],"seeAlsoSections":[{"title":"Initializing PacemakerRadio for use with Tuned Global’s APIs","generated":true,"identifiers":["doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedRestDelegate","doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedMusicCacheDelegate","doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioUIDelegate","doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDKStatusObserverDelegate","doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDKStreamingDelegate","doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDKStatusVariable","doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDKPlaybackMode","doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDKPlaylistOperationType","doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDKLogLevel"],"anchor":"Initializing-PacemakerRadio-for-use-with-Tuned-Globals-APIs"}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"article","primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Essentials","anchor":"Essentials","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This document explains how to integrate PacemakerRadio with your application if it is already using Tuned Global’s backend to access tracks and metadata"}]},{"level":3,"text":"Initialization with Tuned Global’s API","type":"heading","anchor":"Initialization-with-Tuned-Globals-API"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In order to initialise PacemakerRadio against Tuned Global’s API and services you need the following:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedRestDelegate","isActive":true}]}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDKStatusObserverDelegate","isActive":true,"type":"reference"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioUIDelegate"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Tuned Global Store ID","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Tuned Global Application ID","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Device Country Code"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Optionally you may also implement a "},{"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedMusicCacheDelegate","type":"reference","isActive":true}]}]}],"type":"unorderedList"},{"type":"codeListing","syntax":"swift","code":["func application(_ application: UIApplication, ","                   didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {","    \/\/ ...","","    let tunedRestDelegate: TunedRestDelegate = myTunedRestDelegate","    let musicCacheDelegate: TunedMusicCacheDelegate = myMusicCacheDelegate","    let radioUIDelegate: RadioUIDelegate = RadioUIDelegate","    let automixSDKStatusObserverDelegate: AutomixSDKStatusObserverDelegate = myAutomixSDKStatusObserverDelegate","    let countryCode: String = myCountryCode \/\/ \"US\" ? \"AU\"?","    let storeId: String = myTunedStoreId","    let applicationId: String = myApplicationId","    let myAPIKey: String = myApplicationKey","    RadioSDK.initialise(apiKey: myAPIKey","                        tunedDelegate: tunedRestDelegate,","                        statusDelegate: automixSDKStatusObserverDelegate,","                        radioUIDelegate: radioUIDelegate,","                        countryCode: countryCode,","                        storeId: storeId,","                        applicationId: applicationId, ","                        musicCacheDelegate: musicCacheDelegate)","    { error in","        if error != nil {","            \/\/ This means you are forbidden to use the Automix SDK or you have no internet connection.","            return","        }","        \/\/ The Automix SDK public functions can be used from this point onwards :)","    }","","    \/\/ ...","}"]},{"text":"TunedRestDelegate","type":"heading","anchor":"TunedRestDelegate","level":4},{"items":[{"content":[{"inlineContent":[{"text":"PacemakerRadio requires your applications OAuth2 access & refresh tokens in order to take over playback, provided via","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedRestDelegate\/tunedRestTokenExpired(deviceIdentifierForVendor:countryCode:tunedUserId:oldAccessToken:refreshToken:tokenType:completion:)","isActive":true,"type":"reference"}],"type":"paragraph"}]}],"type":"unorderedList"},{"syntax":"swift","type":"codeListing","code":["public class MyTunedRestDelegate: NSObject, TunedRestDelegate {","    \/\/ ...","    public func tunedRestTokenExpired(deviceIdentifierForVendor: String, countryCode: String,","                                      tunedUserId: String?,","                                      oldAccessToken: String?, refreshToken: String?, tokenType: String?,","                                      completion: @escaping (Error?, TunedAuthenticationResponse?, _ tunedUserId: String?) -> Void)","    {","        let response: TunedAuthenticationResponse = TunedAuthenticationResponse.init()","        response.access_token = myAccessToken","        response.token_type = myTokenType","        response.expires_in = myTokenExpiresIn","        response.refresh_token = myRefreshToken","        response.tuned_user_id = myTunedUserId","        completion(response, nil)","    }","    \/\/ ...","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"PacemakerRadio requires your client’s authenticated device, provided via"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedRestDelegate\/asyncGetAuthenticatedDevice(deviceIdentifierForVendor:completion:)","type":"reference","isActive":true}]}]}]},{"code":["public class MyTunedRestDelegate: NSObject, TunedRestDelegate {","    \/\/ ...","    public func asyncGetAuthenticatedDevice(deviceIdentifierForVendor: String, completion: @escaping (_ error: Error?, _ tunedDeviceId: String?) -> Void) -> Void {","        \/\/ ...","        let myTunedDeviceId = String(tunedDeviceId)","        return completion(nil, myTunedDeviceId)","    }","    \/\/ ...","}"],"type":"codeListing","syntax":"swift"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"PacemakerRadio requires a unique device identifier, generally the identifierForVendor provided by Apple should work: Provided via"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedRestDelegate\/uniqueDeviceIdentifier()","isActive":true,"type":"reference"}],"type":"paragraph"}]}],"type":"unorderedList"},{"syntax":"swift","type":"codeListing","code":["public class MyTunedRestDelegate: NSObject, TunedRestDelegate {","    \/\/ ...","    public func uniqueDeviceIdentifier() -> Void) -> String {","        \/\/ ...","        let myUniqueIdentifier = String(identifierForVendor)","        return myUniqueIdentifier","    }","    \/\/ ...","}"]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Should you need access to the PacemakerRadio log in order to debug your implementation, you can print its output via this delegate as well. You can do that via","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedRestDelegate\/logAutomixSDKMessage(logLevel:message:)","type":"reference"}]}]}],"type":"unorderedList"},{"code":["public class MyTunedRestDelegate: NSObject, TunedRestDelegate {","    \/\/ ...","    public func logAutomixSDKMessage(logLevel: AutomixSDKLogLevel, message: String) {","        #if DEBUG","            NSLog(message)","        #endif","    }","    \/\/ ...","}"],"syntax":"swift","type":"codeListing"},{"text":"TunedMusicCacheDelegate","anchor":"TunedMusicCacheDelegate","level":4,"type":"heading"},{"inlineContent":[{"type":"text","text":"PacemakerRadio can be used for offline playback using cached music data. In order to provide and update cached music data and metadata, set the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedMusicCacheDelegate"},{"text":" of RadioSDK using ","type":"text"},{"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDK\/setMusicCacheDelegate(_:)","isActive":true,"type":"reference"},{"text":". This is optional and can be nil.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This provides hooks to inject cached track audio data and metadata, preventing PacemakerRadio from having to request this data from Tuned Global’s API if they are already available. This also enables offline playback when all required data is available on the device"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is done via "},{"type":"reference","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedMusicCacheDelegate\/getTrackMetadata(trackId:)","isActive":true}]},{"syntax":"swift","code":["public class MyMusicCacheDelegate: NSObject, TunedMusicCacheDelegate {","    \/\/ ...","    public func getTrackMetadata(trackId: String?) -> AutomixIQ.AutomixSDKTrackModel? {","        \/\/ If I have this track cached, I should be able to tell its metadata","        if self.isTrackCached(trackId) == false {","            return nil","        }","        return self.metadataForTrack(trackId)","    }","    \/\/ ...","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedMusicCacheDelegate\/getCachedTrack(trackId:)"}]},{"type":"codeListing","code":["public class MyMusicCacheDelegate: NSObject, TunedMusicCacheDelegate {","    \/\/ ...","    public func getCachedTrack(trackId: String) -> Data? {","        \/\/ If I have this track cached, I should be able to decrypt it and send the data","        if self.isTrackCached(trackId) == false {","            return nil","        }","        return self.unencryptedDataForTrack(trackId)","    }","    \/\/ ...","}"],"syntax":"swift"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"PacemakerRadio will download the tracks it needs to play when they are not provided from your cache. It will do so lazily (as required for playback or transition analysis). When a track finishes downloading, PacemakerRadio will pass the audio data back to your application to cache if required."}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"This is done via ","type":"text"},{"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedMusicCacheDelegate\/trackDownloadCompleted(trackId:data:)","type":"reference","isActive":true}]},{"code":["public class MyMusicCacheDelegate: NSObject, TunedMusicCacheDelegate {","    \/\/ ...","    public func trackDownloadCompleted(trackId: String, data: Data) {","        \/\/ Automix SDK finished downloading a track. If I have offline playback or encrypted cache capabilities I should act accordingly here","        return self.cacheTrack(trackId, data:data)","    }","    \/\/ ...","}"],"type":"codeListing","syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"PacemakerRadio will also notify your delegate of download progress.","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is done via "},{"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedMusicCacheDelegate\/trackDownloadProgressChanged(trackId:progress:)","type":"reference","isActive":true}]},{"code":["public class MyMusicCacheDelegate: NSObject, TunedMusicCacheDelegate {","    \/\/ ...","    public func trackDownloadProgressChanged(trackId: String, progress: Swift.Float) {","        self.updateTrackDownloadProgress(identifier: trackId, progress: progress)","        return","    }","    \/\/ ...","}"],"type":"codeListing","syntax":"swift"},{"type":"heading","text":"RadioUIDelegate","level":4,"anchor":"RadioUIDelegate"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioUIDelegate"},{"text":" is responsible for providing data required for the Radio UI to function, as well as presenting UI PacemakerRadio is not able to do on its own.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"PacemakerRadio allows the user to add one or multiple tracks to a radio show. When that action is triggered, PacemakerRadio asks this delegate to provide the UI for selecting them. This is done via "},{"type":"reference","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioUIDelegate\/presentTracklist(completion:)","isActive":true}],"type":"paragraph"}]}]},{"code":["public class MyRadioUIDelegate: NSObject, RadioUIDelegate {","    \/\/ ...","    func presentTracklist(completion: @escaping (_ track: AutomixSDKTrackModel?,","                                                 _ playlist: [AutomixSDKTrackModel]?,","                                                 _ playlistName: String?) -> Void) {","        \/\/ Your implementation for presenting UI that allows to select one or more tracks:","        let tracklist = MyTracklist() { track, tracks, playlistName in","            \/\/ - If you select one track, feed it as the first parameter of the completion block,","            \/\/ - If you select multiple track, feed it as the second paramenter of the completion block,","            \/\/ - If the tracks selected are part of a playlist, feed the name opf that playlist as the thirsd parameter of the completion block.","            completion(track, tracks, playlistName)","        }","        self.present(tracklist, animated: true)","    }","    \/\/ ...","}"],"type":"codeListing","syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"At a time where PacemakerRadio requires a Tuned User Id, if it does not have one it will require the user to authenticate via ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioUIDelegate\/presentAuthentication(completion:)"}]}]}]},{"syntax":"swift","code":["public class MyRadioUIDelegate: NSObject, RadioUIDelegate {","    \/\/ ...","    func presentAuthentication(completion: @escaping (_ success: Bool) -> Void) {","        \/\/ Present your login here","        let authenticationDialog = MyAuthenticationDialog() { success in","            completion(success)","        }","        self.present(authenticationDialog, animated: true)","    }","    \/\/ ...","}"],"type":"codeListing"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"At times, PacemakerRadio will need to present a users’ profile. It will do so via ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioUIDelegate\/presentProfile(identifier:completion:)"}],"type":"paragraph"}]}]},{"syntax":"swift","type":"codeListing","code":["public class MyRadioUIDelegate: NSObject, RadioUIDelegate {","    \/\/ ...","    func presentProfile(identifier: String?, completion: @escaping () -> Void) {","        \/\/ Present the user profile here","        let profileDialog = MyProfileDialog(identifier: identifier) {","            completion()","        }","        self.present(profileDialog, animated: true)","    }","    \/\/ ...","}"]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"At times, PacemakerRadio will need to know if a track is part of the user’s “Liked” playlist. It will ask the client application to do so via ","type":"text"},{"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioUIDelegate\/isTrackLiked(identifier:completion:)","isActive":true,"type":"reference"}]}]}],"type":"unorderedList"},{"syntax":"swift","code":["public class MyRadioUIDelegate: NSObject, RadioUIDelegate {","    \/\/ ...","    func isTrackLiked(identifier: String, completion: @escaping (Bool) -> Void) {","        let likedPlaylist = myLikedPlaylist","        completion(myLikedPlaylist.contains(identifier))","    }","    \/\/ ...","}"],"type":"codeListing"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"PacemakerRadio allows for a user to flag\/unflag a track as Liked. When that happens, it will do so via "},{"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioUIDelegate\/setTrackLiked(identifier:liked:completion:)","type":"reference","isActive":true}]}]}]},{"code":["public class MyRadioUIDelegate: NSObject, RadioUIDelegate {","    \/\/ ...","    func setTrackLiked(identifier: String, liked: Bool,","                       completion: @escaping (_ error: Error?,","                                              _ success: Bool) -> Void) -> Void {","        let likedPlaylist = myLikedPlaylist","        if(liked) {","            likedPlaylist.add(identifier)","        } else {","            likedPlaylist.remove(identifier)","        }","        completion(null, true)","    }","    \/\/ ...","}"],"type":"codeListing","syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"PacemakerRadio also notifies this delegate when it will and has minimised the Radio UI, and whe it will and has closed the Radio UI. It does so via ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioUIDelegate\/willDismissRadioUI()"},{"text":", ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioUIDelegate\/didDismissRadioUI()"},{"text":", ","type":"text"},{"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioUIDelegate\/willCloseRadioUI()","type":"reference","isActive":true},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioUIDelegate\/didCloseRadioUI()","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}]}]},{"syntax":"swift","type":"codeListing","code":["public class MyRadioUIDelegate: NSObject, RadioUIDelegate {","    \/\/ ...","    func willDismissRadioUI() -> Void {","        return","    }","    ","    func didDismissRadioUI() -> Void {","        return","    }","    ","    func willCloseRadioUI() -> Void {","        return","    }","    ","    func didCloseRadioUI() -> Void {","        return","    }","    \/\/ ...","}"]},{"type":"heading","text":"AutomixSDKStatusObserverDelegate","anchor":"AutomixSDKStatusObserverDelegate","level":4},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDKStatusObserverDelegate","isActive":true},{"type":"text","text":" is responsible for updating your player’s UI."}]},{"text":"Checking if PacemakerRadio is initialised","level":3,"anchor":"Checking-if-PacemakerRadio-is-initialised","type":"heading"},{"inlineContent":[{"text":"To check wether AutomixIQ is currently initialised, use","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioSDK\/initialised()","type":"reference","isActive":true}]}]}],"type":"unorderedList"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/pacemakerradio\/initialising-pacemakerradio-article"]},{"paths":["\/documentation\/pacemakerradio\/initialising-pacemakerradio-article"],"traits":[{"interfaceLanguage":"occ"}]}],"metadata":{"roleHeading":"Article","role":"article","modules":[{"name":"PacemakerRadio"}],"title":"Initializing PacemakerRadio"},"hierarchy":{"paths":[["doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio"]]},"references":{"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/TunedMusicCacheDelegate/getTrackMetadata(trackId:)":{"required":true,"kind":"symbol","title":"getTrackMetadata(trackId:)","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedMusicCacheDelegate\/getTrackMetadata(trackId:)","url":"\/documentation\/pacemakerradio\/tunedmusiccachedelegate\/gettrackmetadata(trackid:)","navigatorTitle":[{"text":"getTrackMetadataWithTrackId:","kind":"identifier"}],"abstract":[{"text":"Called by AutomixIQ before attempting to download a tracks metadata to allow the client to provide any cached metadata, return nil if not available.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getTrackMetadata","kind":"identifier"},{"text":"(","kind":"text"},{"text":"trackId","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"text":"AutomixSDKTrackModel","kind":"typeIdentifier","preciseIdentifier":"c:@M@PacemakerRadio@objc(cs)AutomixSDKTrackModel"},{"text":"?","kind":"text"}]},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/TunedRestDelegate/tunedRestTokenExpired(deviceIdentifierForVendor:countryCode:tunedUserId:oldAccessToken:refreshToken:tokenType:completion:)":{"kind":"symbol","title":"tunedRestTokenExpired(deviceIdentifierForVendor:countryCode:tunedUserId:oldAccessToken:refreshToken:tokenType:completion:)","role":"symbol","navigatorTitle":[{"text":"tunedRestTokenExpiredWithDeviceIdentifierForVendor:countryCode:tunedUserId:oldAccessToken:refreshToken:tokenType:completion:","kind":"identifier"}],"type":"topic","required":true,"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedRestDelegate\/tunedRestTokenExpired(deviceIdentifierForVendor:countryCode:tunedUserId:oldAccessToken:refreshToken:tokenType:completion:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"tunedRestTokenExpired","kind":"identifier"},{"kind":"text","text":"("},{"text":"deviceIdentifierForVendor","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"text":"countryCode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"tunedUserId"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?, ","kind":"text"},{"text":"oldAccessToken","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"refreshToken"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?, "},{"text":"tokenType","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"text":"completion","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"error","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":"?, "},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"credentials","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@M@PacemakerRadio@objc(cs)TunedAuthenticationResponse","text":"TunedAuthenticationResponse","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"tunedUserId","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"url":"\/documentation\/pacemakerradio\/tunedrestdelegate\/tunedresttokenexpired(deviceidentifierforvendor:countrycode:tuneduserid:oldaccesstoken:refreshtoken:tokentype:completion:)","abstract":[{"text":"Called by AutomixIQ when initialised against a Tuned Global backend or when its access token has expired.","type":"text"}]},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/RadioUIDelegate":{"url":"\/documentation\/pacemakerradio\/radiouidelegate","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RadioUIDelegate","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"RadioUIDelegate"}],"title":"RadioUIDelegate","kind":"symbol","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioUIDelegate","abstract":[{"type":"text","text":"RadioUIDelegate protocol defines the methods to be implemented by a class tasked with providing the Automix SDK the user interface requires for social features."}]},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/RadioUIDelegate/willCloseRadioUI()":{"type":"topic","role":"symbol","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioUIDelegate\/willCloseRadioUI()","kind":"symbol","required":true,"url":"\/documentation\/pacemakerradio\/radiouidelegate\/willcloseradioui()","title":"willCloseRadioUI()","navigatorTitle":[{"text":"willCloseRadioUI","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"willCloseRadioUI"},{"text":"()","kind":"text"}],"abstract":[{"type":"text","text":"Called by AutomixSDK when the Radio UI is closed"}]},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/RadioUIDelegate/didDismissRadioUI()":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"didDismissRadioUI","kind":"identifier"},{"text":"()","kind":"text"}],"title":"didDismissRadioUI()","navigatorTitle":[{"kind":"identifier","text":"didDismissRadioUI"}],"abstract":[{"type":"text","text":"Called by AutomixSDK when the Radio UI is dismissed"}],"required":true,"url":"\/documentation\/pacemakerradio\/radiouidelegate\/diddismissradioui()","type":"topic","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioUIDelegate\/didDismissRadioUI()"},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/RadioUIDelegate/presentProfile(identifier:completion:)":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"presentProfile","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?, ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"title":"presentProfile(identifier:completion:)","navigatorTitle":[{"kind":"identifier","text":"presentProfileWithIdentifier:completion:"}],"abstract":[{"type":"text","text":"Called by AutomixSDK when it wishes to present UI with a user’s information"}],"required":true,"url":"\/documentation\/pacemakerradio\/radiouidelegate\/presentprofile(identifier:completion:)","type":"topic","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioUIDelegate\/presentProfile(identifier:completion:)"},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/RadioUIDelegate/didCloseRadioUI()":{"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"didCloseRadioUI","kind":"identifier"},{"kind":"text","text":"()"}],"url":"\/documentation\/pacemakerradio\/radiouidelegate\/didcloseradioui()","navigatorTitle":[{"kind":"identifier","text":"didCloseRadioUI"}],"abstract":[{"text":"Called by AutomixSDK when the Radio UI is closed","type":"text"}],"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioUIDelegate\/didCloseRadioUI()","role":"symbol","title":"didCloseRadioUI()"},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/TunedRestDelegate":{"url":"\/documentation\/pacemakerradio\/tunedrestdelegate","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TunedRestDelegate"}],"navigatorTitle":[{"kind":"identifier","text":"TunedRestDelegate"}],"title":"TunedRestDelegate","kind":"symbol","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedRestDelegate","abstract":[{"text":"TunedRestDelegate protocol defines the methods to be implemented that will provide AutomixIQ the credentials and identifiers to Tuned Global’s backend","type":"text"}]},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/RadioUIDelegate/setTrackLiked(identifier:liked:completion:)":{"title":"setTrackLiked(identifier:liked:completion:)","abstract":[{"type":"text","text":"Called by AutomixSDK when it needs add or remove a track with a given identifier from liked"}],"navigatorTitle":[{"text":"setTrackLikedWithIdentifier:liked:completion:","kind":"identifier"}],"role":"symbol","kind":"symbol","required":true,"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioUIDelegate\/setTrackLiked(identifier:liked:completion:)","url":"\/documentation\/pacemakerradio\/radiouidelegate\/settrackliked(identifier:liked:completion:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"setTrackLiked","kind":"identifier"},{"kind":"text","text":"("},{"text":"identifier","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":", ","kind":"text"},{"text":"liked","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"error","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":"?, "},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"success"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}]},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/AutomixSDK/setMusicCacheDelegate(_:)":{"title":"setMusicCacheDelegate(_:)","kind":"symbol","url":"\/documentation\/pacemakerradio\/automixsdk\/setmusiccachedelegate(_:)","type":"topic","abstract":[{"type":"text","text":"Adds a new music cache delegate"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"setMusicCacheDelegate","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"TunedMusicCacheDelegate","preciseIdentifier":"c:@M@PacemakerRadio@objc(pl)TunedMusicCacheDelegate"},{"text":")","kind":"text"}],"navigatorTitle":[{"text":"setMusicCacheDelegate:","kind":"identifier"}],"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDK\/setMusicCacheDelegate(_:)"},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/TunedMusicCacheDelegate/trackDownloadCompleted(trackId:data:)":{"type":"topic","url":"\/documentation\/pacemakerradio\/tunedmusiccachedelegate\/trackdownloadcompleted(trackid:data:)","abstract":[{"type":"text","text":"Called by AutomixIQ when a track has been fully downloaded. This can be used to cache the track locally on the user’s device."}],"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedMusicCacheDelegate\/trackDownloadCompleted(trackId:data:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trackDownloadCompleted"},{"text":"(","kind":"text"},{"text":"trackId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"data"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","kind":"symbol","title":"trackDownloadCompleted(trackId:data:)","navigatorTitle":[{"text":"trackDownloadCompletedWithTrackId:data:","kind":"identifier"}],"required":true},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio":{"url":"\/documentation\/pacemakerradio","kind":"symbol","abstract":[{"type":"text","text":"Broadcast your playlist, mix, or set along with your voice, to the world. Tune in to other broadcasts and jump in the conversation with comments, or show your support with quick reactions. An interactive UI for AutomixIQ."}],"role":"collection","type":"topic","title":"PacemakerRadio","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio"},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/AutomixSDKPlaybackMode":{"type":"topic","role":"symbol","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDKPlaybackMode","kind":"symbol","url":"\/documentation\/pacemakerradio\/automixsdkplaybackmode","title":"AutomixSDKPlaybackMode","navigatorTitle":[{"text":"AutomixSDKPlaybackMode","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AutomixSDKPlaybackMode","kind":"identifier"}],"abstract":[{"type":"text","text":"AutomixIQ playback mode"}]},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/RadioUIDelegate/presentAuthentication(completion:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioUIDelegate\/presentAuthentication(completion:)","kind":"symbol","required":true,"url":"\/documentation\/pacemakerradio\/radiouidelegate\/presentauthentication(completion:)","title":"presentAuthentication(completion:)","navigatorTitle":[{"kind":"identifier","text":"presentAuthenticationWithCompletion:"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"presentAuthentication","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": ("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"success"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Called by AutomixSDK when it wishes to present UI to authenticate a user"}]},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/AutomixSDKStatusObserverDelegate":{"kind":"symbol","url":"\/documentation\/pacemakerradio\/automixsdkstatusobserverdelegate","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AutomixSDKStatusObserverDelegate"}],"title":"AutomixSDKStatusObserverDelegate","role":"symbol","abstract":[{"text":"AutomixSDKStatusObserverDelegate protocol defines the methods to be implemented with observing the status of AutomixIQ to reflect it on a UI.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AutomixSDKStatusObserverDelegate","kind":"identifier"}],"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDKStatusObserverDelegate"},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/TunedRestDelegate/logAutomixSDKMessage(logLevel:message:)":{"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedRestDelegate\/logAutomixSDKMessage(logLevel:message:)","required":true,"role":"symbol","navigatorTitle":[{"text":"logAutomixSDKMessageWithLogLevel:message:","kind":"identifier"}],"url":"\/documentation\/pacemakerradio\/tunedrestdelegate\/logautomixsdkmessage(loglevel:message:)","type":"topic","title":"logAutomixSDKMessage(logLevel:message:)","abstract":[{"text":"Called by AutomixIQ when it wishes to output a log message","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"logAutomixSDKMessage","kind":"identifier"},{"text":"(","kind":"text"},{"text":"logLevel","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AutomixSDKLogLevel","preciseIdentifier":"c:@M@PacemakerRadio@E@AutomixSDKLogLevel","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"message"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"kind":"symbol"},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/AutomixSDKStreamingDelegate":{"abstract":[{"text":"AutomixSDKStreamingDelegate protocol defines the methods to be implemented with providing AutomixIQ the information it requires to play content.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AutomixSDKStreamingDelegate","kind":"identifier"}],"navigatorTitle":[{"text":"AutomixSDKStreamingDelegate","kind":"identifier"}],"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDKStreamingDelegate","title":"AutomixSDKStreamingDelegate","url":"\/documentation\/pacemakerradio\/automixsdkstreamingdelegate","kind":"symbol"},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/RadioSDK/initialised()":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"initialised","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"initialised()","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioSDK\/initialised()","kind":"symbol","abstract":[{"type":"text","text":"Returns the initialised status of the Automix SDK."}],"type":"topic","role":"symbol","url":"\/documentation\/pacemakerradio\/radiosdk\/initialised()","navigatorTitle":[{"text":"initialised","kind":"identifier"}]},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/AutomixSDKPlaylistOperationType":{"type":"topic","role":"symbol","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDKPlaylistOperationType","kind":"symbol","url":"\/documentation\/pacemakerradio\/automixsdkplaylistoperationtype","title":"AutomixSDKPlaylistOperationType","navigatorTitle":[{"text":"AutomixSDKPlaylistOperationType","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AutomixSDKPlaylistOperationType","kind":"identifier"}],"abstract":[]},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/TunedRestDelegate/uniqueDeviceIdentifier()":{"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedRestDelegate\/uniqueDeviceIdentifier()","required":true,"role":"symbol","navigatorTitle":[{"text":"uniqueDeviceIdentifier","kind":"identifier"}],"url":"\/documentation\/pacemakerradio\/tunedrestdelegate\/uniquedeviceidentifier()","type":"topic","title":"uniqueDeviceIdentifier()","abstract":[{"text":"Called by AutomixIQ to request the unique identifier for the users device as a string.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"On iOS this is generally the Identifier for Vendor."},{"text":" ","type":"text"},{"type":"text","text":"It can be any string as long as it is unique"},{"text":" ","type":"text"},{"text":"AutomixIQ will use this string as the UniqueId if it needs to register the device for playback","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"uniqueDeviceIdentifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"kind":"symbol"},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/TunedMusicCacheDelegate/trackDownloadProgressChanged(trackId:progress:)":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"trackDownloadProgressChangedWithTrackId:progress:"}],"required":true,"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedMusicCacheDelegate\/trackDownloadProgressChanged(trackId:progress:)","url":"\/documentation\/pacemakerradio\/tunedmusiccachedelegate\/trackdownloadprogresschanged(trackid:progress:)","type":"topic","kind":"symbol","abstract":[{"text":"Called by AutomixIQ when a track download progress has changed.","type":"text"}],"title":"trackDownloadProgressChanged(trackId:progress:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"trackDownloadProgressChanged","kind":"identifier"},{"kind":"text","text":"("},{"text":"trackId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"progress","kind":"externalParam"},{"kind":"text","text":": Swift"},{"text":".","kind":"text"},{"text":"Float","kind":"typeIdentifier","preciseIdentifier":"s:Sf"},{"text":")","kind":"text"}]},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/RadioUIDelegate/willDismissRadioUI()":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"willDismissRadioUI","kind":"identifier"},{"text":"()","kind":"text"}],"title":"willDismissRadioUI()","navigatorTitle":[{"text":"willDismissRadioUI","kind":"identifier"}],"abstract":[{"type":"text","text":"Called by AutomixSDK when the Radio UI about to be dismissed"}],"required":true,"url":"\/documentation\/pacemakerradio\/radiouidelegate\/willdismissradioui()","type":"topic","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioUIDelegate\/willDismissRadioUI()"},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/RadioUIDelegate/isTrackLiked(identifier:completion:)":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isTrackLiked"},{"text":"(","kind":"text"},{"text":"identifier","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"completion"},{"text":": (","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"isLiked","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"title":"isTrackLiked(identifier:completion:)","navigatorTitle":[{"kind":"identifier","text":"isTrackLikedWithIdentifier:completion:"}],"abstract":[{"type":"text","text":"Called by AutomixSDK when it needs to know wether a track is liked or not"}],"required":true,"url":"\/documentation\/pacemakerradio\/radiouidelegate\/istrackliked(identifier:completion:)","type":"topic","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioUIDelegate\/isTrackLiked(identifier:completion:)"},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/AutomixSDKStatusVariable":{"url":"\/documentation\/pacemakerradio\/automixsdkstatusvariable","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AutomixSDKStatusVariable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AutomixSDKStatusVariable"}],"abstract":[{"type":"text","text":"AutomixIQ status variable type"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDKStatusVariable","title":"AutomixSDKStatusVariable"},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/RadioUIDelegate/presentTracklist(completion:)":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"presentTracklist"},{"text":"(","kind":"text"},{"text":"completion","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"track"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AutomixSDKTrackModel","preciseIdentifier":"c:@M@PacemakerRadio@objc(cs)AutomixSDKTrackModel"},{"text":"?, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"playlist"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"AutomixSDKTrackModel","preciseIdentifier":"c:@M@PacemakerRadio@objc(cs)AutomixSDKTrackModel"},{"text":"]?, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"playlistName","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":"?) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"title":"presentTracklist(completion:)","navigatorTitle":[{"text":"presentTracklistWithCompletion:","kind":"identifier"}],"abstract":[{"type":"text","text":"Called by AutomixSDK when it wishes to present UI to select one or many tracks"}],"required":true,"url":"\/documentation\/pacemakerradio\/radiouidelegate\/presenttracklist(completion:)","type":"topic","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioUIDelegate\/presentTracklist(completion:)"},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/TunedMusicCacheDelegate":{"kind":"symbol","title":"TunedMusicCacheDelegate","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TunedMusicCacheDelegate"}],"type":"topic","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedMusicCacheDelegate","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TunedMusicCacheDelegate"}],"url":"\/documentation\/pacemakerradio\/tunedmusiccachedelegate","abstract":[{"text":"TunedMusicCacheDelegate protocol defines the methods to be implemented with storing and providing cached track data","type":"text"}]},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/TunedMusicCacheDelegate/getCachedTrack(trackId:)":{"url":"\/documentation\/pacemakerradio\/tunedmusiccachedelegate\/getcachedtrack(trackid:)","kind":"symbol","type":"topic","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedMusicCacheDelegate\/getCachedTrack(trackId:)","title":"getCachedTrack(trackId:)","navigatorTitle":[{"kind":"identifier","text":"getCachedTrackWithTrackId:"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCachedTrack","kind":"identifier"},{"kind":"text","text":"("},{"text":"trackId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"role":"symbol","abstract":[{"type":"text","text":"Called by AutomixIQ before attempting to download a track to allow the client to provide any cached track data, return nil if not available."}],"required":true},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/AutomixSDKLogLevel":{"abstract":[{"type":"text","text":"AutomixSDKLogLevel is an enum of all the AutomixIQ available log levels"}],"url":"\/documentation\/pacemakerradio\/automixsdkloglevel","kind":"symbol","title":"AutomixSDKLogLevel","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDKLogLevel","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AutomixSDKLogLevel"}],"type":"topic","navigatorTitle":[{"text":"AutomixSDKLogLevel","kind":"identifier"}]},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/TunedRestDelegate/asyncGetAuthenticatedDevice(deviceIdentifierForVendor:completion:)":{"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedRestDelegate\/asyncGetAuthenticatedDevice(deviceIdentifierForVendor:completion:)","role":"symbol","navigatorTitle":[{"text":"asyncGetAuthenticatedDeviceWithDeviceIdentifierForVendor:completion:","kind":"identifier"}],"url":"\/documentation\/pacemakerradio\/tunedrestdelegate\/asyncgetauthenticateddevice(deviceidentifierforvendor:completion:)","type":"topic","title":"asyncGetAuthenticatedDevice(deviceIdentifierForVendor:completion:)","abstract":[{"text":"Called by AutomixIQ while initialising to give you an opportunity to provide the authenticated device ID or perform device authentication as required.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If not implemented, AutomixIQ will proceed to register a device for the logged in user with deviceType: “iPhone”, displayName: “AutomixIQ” and deviceOS: “iOS”."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asyncGetAuthenticatedDevice"},{"text":"(","kind":"text"},{"text":"deviceIdentifierForVendor","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"error","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"tunedDeviceId","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol"}},"variantOverrides":[{"patch":[{"value":"occ","op":"replace","path":"\/identifier\/interfaceLanguage"},{"path":"\/topicSections","op":"add","value":null},{"path":"\/seeAlsoSections","value":[{"generated":true,"title":"Initializing PacemakerRadio for use with Tuned Global’s APIs","anchor":"Initializing-PacemakerRadio-for-use-with-Tuned-Globals-APIs","identifiers":["doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedRestDelegate","doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/TunedMusicCacheDelegate","doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/RadioUIDelegate","doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDKStatusObserverDelegate","doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDKStreamingDelegate","doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDKStatusVariable","doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDKPlaybackMode","doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDKPlaylistOperationType","doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDKLogLevel"]}],"op":"replace"},{"value":"getTrackMetadataWithTrackId:","op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1TunedMusicCacheDelegate~1getTrackMetadata(trackId:)\/title"},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1TunedMusicCacheDelegate~1getTrackMetadata(trackId:)\/fragments","value":[{"text":"- ","kind":"text"},{"text":"getTrackMetadataWithTrackId:","kind":"identifier"}],"op":"replace"},{"value":"tunedRestTokenExpiredWithDeviceIdentifierForVendor:countryCode:tunedUserId:oldAccessToken:refreshToken:tokenType:completion:","op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1TunedRestDelegate~1tunedRestTokenExpired(deviceIdentifierForVendor:countryCode:tunedUserId:oldAccessToken:refreshToken:tokenType:completion:)\/title"},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1TunedRestDelegate~1tunedRestTokenExpired(deviceIdentifierForVendor:countryCode:tunedUserId:oldAccessToken:refreshToken:tokenType:completion:)\/fragments","value":[{"text":"- ","kind":"text"},{"text":"tunedRestTokenExpiredWithDeviceIdentifierForVendor:countryCode:tunedUserId:oldAccessToken:refreshToken:tokenType:completion:","kind":"identifier"}],"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1RadioUIDelegate\/title","value":"RadioUIDelegate"},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1RadioUIDelegate\/fragments","value":[{"text":"RadioUIDelegate","kind":"identifier"}],"op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1RadioUIDelegate\/navigatorTitle","op":"replace","value":[{"text":"RadioUIDelegate","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1RadioUIDelegate~1willCloseRadioUI()\/title","value":"willCloseRadioUI","op":"replace"},{"value":[{"text":"- ","kind":"text"},{"text":"willCloseRadioUI","kind":"identifier"}],"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1RadioUIDelegate~1willCloseRadioUI()\/fragments","op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1RadioUIDelegate~1didDismissRadioUI()\/title","value":"didDismissRadioUI","op":"replace"},{"value":[{"kind":"text","text":"- "},{"text":"didDismissRadioUI","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1RadioUIDelegate~1didDismissRadioUI()\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1RadioUIDelegate~1presentProfile(identifier:completion:)\/title","value":"presentProfileWithIdentifier:completion:"},{"value":[{"text":"- ","kind":"text"},{"text":"presentProfileWithIdentifier:completion:","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1RadioUIDelegate~1presentProfile(identifier:completion:)\/fragments"},{"value":"didCloseRadioUI","op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1RadioUIDelegate~1didCloseRadioUI()\/title"},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1RadioUIDelegate~1didCloseRadioUI()\/fragments","value":[{"kind":"text","text":"- "},{"text":"didCloseRadioUI","kind":"identifier"}]},{"value":"TunedRestDelegate","op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1TunedRestDelegate\/title"},{"value":[{"text":"TunedRestDelegate","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1TunedRestDelegate\/fragments"},{"value":[{"text":"TunedRestDelegate","kind":"identifier"}],"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1TunedRestDelegate\/navigatorTitle","op":"replace"},{"value":"setTrackLikedWithIdentifier:liked:completion:","op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1RadioUIDelegate~1setTrackLiked(identifier:liked:completion:)\/title"},{"value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"setTrackLikedWithIdentifier:liked:completion:"}],"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1RadioUIDelegate~1setTrackLiked(identifier:liked:completion:)\/fragments","op":"replace"},{"value":"setMusicCacheDelegate:","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDK~1setMusicCacheDelegate(_:)\/title","op":"replace"},{"value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"setMusicCacheDelegate:"}],"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDK~1setMusicCacheDelegate(_:)\/fragments","op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1TunedMusicCacheDelegate~1trackDownloadCompleted(trackId:data:)\/title","value":"trackDownloadCompletedWithTrackId:data:","op":"replace"},{"value":[{"kind":"text","text":"- "},{"text":"trackDownloadCompletedWithTrackId:data:","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1TunedMusicCacheDelegate~1trackDownloadCompleted(trackId:data:)\/fragments"},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDKPlaybackMode\/title","op":"replace","value":"AutomixSDKPlaybackMode"},{"value":[{"text":"AutomixSDKPlaybackMode","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDKPlaybackMode\/fragments"},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDKPlaybackMode\/navigatorTitle","op":"replace","value":[{"text":"AutomixSDKPlaybackMode","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1RadioUIDelegate~1presentAuthentication(completion:)\/title","op":"replace","value":"presentAuthenticationWithCompletion:"},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1RadioUIDelegate~1presentAuthentication(completion:)\/fragments","op":"replace","value":[{"kind":"text","text":"- "},{"text":"presentAuthenticationWithCompletion:","kind":"identifier"}]},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDKStatusObserverDelegate\/title","op":"replace","value":"AutomixSDKStatusObserverDelegate"},{"value":[{"text":"AutomixSDKStatusObserverDelegate","kind":"identifier"}],"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDKStatusObserverDelegate\/fragments","op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDKStatusObserverDelegate\/navigatorTitle","value":[{"text":"AutomixSDKStatusObserverDelegate","kind":"identifier"}],"op":"replace"},{"op":"replace","value":"logAutomixSDKMessageWithLogLevel:message:","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1TunedRestDelegate~1logAutomixSDKMessage(logLevel:message:)\/title"},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1TunedRestDelegate~1logAutomixSDKMessage(logLevel:message:)\/fragments","value":[{"kind":"text","text":"- "},{"text":"logAutomixSDKMessageWithLogLevel:message:","kind":"identifier"}],"op":"replace"},{"value":"AutomixSDKStreamingDelegate","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDKStreamingDelegate\/title","op":"replace"},{"value":[{"text":"AutomixSDKStreamingDelegate","kind":"identifier"}],"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDKStreamingDelegate\/fragments","op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDKStreamingDelegate\/navigatorTitle","op":"replace","value":[{"kind":"identifier","text":"AutomixSDKStreamingDelegate"}]},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1RadioSDK~1initialised()\/title","value":"initialised"},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1RadioSDK~1initialised()\/fragments","value":[{"kind":"text","text":"+ "},{"text":"initialised","kind":"identifier"}],"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDKPlaylistOperationType\/title","value":"AutomixSDKPlaylistOperationType"},{"op":"replace","value":[{"text":"AutomixSDKPlaylistOperationType","kind":"identifier"}],"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDKPlaylistOperationType\/fragments"},{"value":[{"text":"AutomixSDKPlaylistOperationType","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDKPlaylistOperationType\/navigatorTitle"},{"value":"uniqueDeviceIdentifier","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1TunedRestDelegate~1uniqueDeviceIdentifier()\/title","op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1TunedRestDelegate~1uniqueDeviceIdentifier()\/fragments","value":[{"text":"- ","kind":"text"},{"text":"uniqueDeviceIdentifier","kind":"identifier"}],"op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1TunedMusicCacheDelegate~1trackDownloadProgressChanged(trackId:progress:)\/title","value":"trackDownloadProgressChangedWithTrackId:progress:","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1TunedMusicCacheDelegate~1trackDownloadProgressChanged(trackId:progress:)\/fragments","value":[{"kind":"text","text":"- "},{"text":"trackDownloadProgressChangedWithTrackId:progress:","kind":"identifier"}]},{"op":"replace","value":"willDismissRadioUI","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1RadioUIDelegate~1willDismissRadioUI()\/title"},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1RadioUIDelegate~1willDismissRadioUI()\/fragments","value":[{"text":"- ","kind":"text"},{"text":"willDismissRadioUI","kind":"identifier"}]},{"value":"isTrackLikedWithIdentifier:completion:","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1RadioUIDelegate~1isTrackLiked(identifier:completion:)\/title","op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1RadioUIDelegate~1isTrackLiked(identifier:completion:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"isTrackLikedWithIdentifier:completion:"}],"op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDKStatusVariable\/title","op":"replace","value":"AutomixSDKStatusVariable"},{"value":[{"text":"AutomixSDKStatusVariable","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDKStatusVariable\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDKStatusVariable\/navigatorTitle","value":[{"kind":"identifier","text":"AutomixSDKStatusVariable"}]},{"op":"replace","value":"presentTracklistWithCompletion:","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1RadioUIDelegate~1presentTracklist(completion:)\/title"},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1RadioUIDelegate~1presentTracklist(completion:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"presentTracklistWithCompletion:"}]},{"value":"TunedMusicCacheDelegate","op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1TunedMusicCacheDelegate\/title"},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1TunedMusicCacheDelegate\/fragments","value":[{"text":"TunedMusicCacheDelegate","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1TunedMusicCacheDelegate\/navigatorTitle","value":[{"kind":"identifier","text":"TunedMusicCacheDelegate"}]},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1TunedMusicCacheDelegate~1getCachedTrack(trackId:)\/title","value":"getCachedTrackWithTrackId:","op":"replace"},{"value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"getCachedTrackWithTrackId:"}],"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1TunedMusicCacheDelegate~1getCachedTrack(trackId:)\/fragments"},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDKLogLevel\/title","value":"AutomixSDKLogLevel","op":"replace"},{"value":[{"text":"AutomixSDKLogLevel","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDKLogLevel\/fragments"},{"op":"replace","value":[{"text":"AutomixSDKLogLevel","kind":"identifier"}],"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDKLogLevel\/navigatorTitle"},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1TunedRestDelegate~1asyncGetAuthenticatedDevice(deviceIdentifierForVendor:completion:)\/title","value":"asyncGetAuthenticatedDeviceWithDeviceIdentifierForVendor:completion:"},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1TunedRestDelegate~1asyncGetAuthenticatedDevice(deviceIdentifierForVendor:completion:)\/fragments","value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"asyncGetAuthenticatedDeviceWithDeviceIdentifierForVendor:completion:"}],"op":"replace"}],"traits":[{"interfaceLanguage":"occ"}]}]}