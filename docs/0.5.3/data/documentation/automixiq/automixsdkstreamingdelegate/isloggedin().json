{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@objc","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isLoggedIn","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["iOS"]}]},{"content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"true if it is allowed or there are no authentication requirements, false otherwise"}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/automixiq\/automixsdkstreamingdelegate\/isloggedin()"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/automixiq\/automixsdkstreamingdelegate\/isloggedin()"]}],"identifier":{"url":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixSDKStreamingDelegate\/isLoggedIn()","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ","doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixSDKStreamingDelegate"]]},"sections":[],"metadata":{"role":"symbol","title":"isLoggedIn()","roleHeading":"Instance Method","externalID":"c:@M@AutomixIQ@objc(pl)AutomixSDKStreamingDelegate(im)isLoggedIn","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isLoggedIn","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"navigatorTitle":[{"kind":"identifier","text":"isLoggedIn"}],"modules":[{"name":"AutomixIQ"}],"symbolKind":"method","required":true},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Called by the AutomixIQ SDK to learn if it is allowed to stream content that is protected by some form of authentication."},{"type":"text","text":" "},{"text":"An example is, an implementation via an API behind OAuth would return true if access and refresh tokens are available, false otherwise","type":"text"}],"references":{"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ":{"role":"collection","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ","kind":"symbol","title":"AutomixIQ","type":"topic","url":"\/documentation\/automixiq","abstract":[{"text":"Enable smooth transitions between tracks for a seamlessly beat-matched experience within your iOS music application.","type":"text"}]},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/AutomixSDKStreamingDelegate":{"navigatorTitle":[{"text":"AutomixSDKStreamingDelegate","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"AutomixSDKStreamingDelegate protocol defines the methods to be implemented by a class tasked with providing the Automix SDK the information it requires to play content.","type":"text"},{"text":" ","type":"text"},{"text":"See TunedDemoStreamingHandler for an example of an object implementing this protocol.","type":"text"}],"url":"\/documentation\/automixiq\/automixsdkstreamingdelegate","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixSDKStreamingDelegate","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AutomixSDKStreamingDelegate","kind":"identifier"}],"title":"AutomixSDKStreamingDelegate"},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/AutomixSDKStreamingDelegate/isLoggedIn()":{"url":"\/documentation\/automixiq\/automixsdkstreamingdelegate\/isloggedin()","type":"topic","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixSDKStreamingDelegate\/isLoggedIn()","title":"isLoggedIn()","role":"symbol","abstract":[{"type":"text","text":"Called by the AutomixIQ SDK to learn if it is allowed to stream content that is protected by some form of authentication."},{"text":" ","type":"text"},{"text":"An example is, an implementation via an API behind OAuth would return true if access and refresh tokens are available, false otherwise","type":"text"}],"required":true,"kind":"symbol","navigatorTitle":[{"text":"isLoggedIn","kind":"identifier"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isLoggedIn"},{"text":"() -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"path":"\/metadata\/roleHeading","op":"replace","value":"Instance Method"},{"op":"replace","path":"\/metadata\/title","value":"isLoggedIn"},{"path":"\/metadata\/symbolKind","value":"method","op":"replace"},{"path":"\/metadata\/fragments","value":[{"kind":"text","text":"- "},{"text":"isLoggedIn","kind":"identifier"}],"op":"replace"},{"op":"add","path":"\/topicSections","value":null},{"value":null,"op":"add","path":"\/relationshipsSections"},{"op":"add","path":"\/seeAlsoSections","value":null},{"value":{"kind":"declarations","declarations":[{"languages":["occ"],"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","text":"BOOL","preciseIdentifier":"c:@T@BOOL"},{"text":") ","kind":"text"},{"text":"isLoggedIn","kind":"identifier"},{"kind":"text","text":";"}],"platforms":["iOS"]}]},"path":"\/primaryContentSections\/0","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixSDKStreamingDelegate\/title","value":"AutomixSDKStreamingDelegate"},{"op":"replace","value":[{"text":"AutomixSDKStreamingDelegate","kind":"identifier"}],"path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixSDKStreamingDelegate\/fragments"},{"op":"replace","value":"isLoggedIn","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixSDKStreamingDelegate~1isLoggedIn()\/title"},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixSDKStreamingDelegate~1isLoggedIn()\/fragments","value":[{"text":"- ","kind":"text"},{"text":"isLoggedIn","kind":"identifier"}]}]}]}