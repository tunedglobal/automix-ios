{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/pacemakerradio\/automixsdk\/addstatusobserverdelegate(_:)"]},{"paths":["\/documentation\/pacemakerradio\/automixsdk\/addstatusobserverdelegate(_:)"],"traits":[{"interfaceLanguage":"occ"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Adds a new status observer delegate","type":"text"}],"hierarchy":{"paths":[["doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio","doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDK"]]},"sections":[],"identifier":{"url":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDK\/addStatusObserverDelegate(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"attribute","text":"@objc"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"addStatusObserverDelegate","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"statusObserverDelegate","kind":"internalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDKStatusObserverDelegate","kind":"typeIdentifier","text":"AutomixSDKStatusObserverDelegate","preciseIdentifier":"c:@M@PacemakerRadio@objc(pl)AutomixSDKStatusObserverDelegate"},{"text":")","kind":"text"}],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"The delegate to add.","type":"text"}],"type":"paragraph"}],"name":"statusObserverDelegate"}],"kind":"parameters"}],"kind":"symbol","metadata":{"modules":[{"name":"PacemakerRadio"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"addStatusObserverDelegate","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@PacemakerRadio@objc(pl)AutomixSDKStatusObserverDelegate","text":"AutomixSDKStatusObserverDelegate"},{"text":")","kind":"text"}],"title":"addStatusObserverDelegate(_:)","symbolKind":"method","navigatorTitle":[{"kind":"identifier","text":"addStatusObserverDelegate:"}],"externalID":"c:@M@PacemakerRadio@objc(cs)AutomixSDK(im)addStatusObserverDelegate:","role":"symbol","roleHeading":"Instance Method"},"references":{"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/AutomixSDK":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AutomixSDK"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AutomixSDK","kind":"identifier"}],"title":"AutomixSDK","abstract":[{"type":"text","text":"AutomixSDK represents the AutomixIQ SDK and exposes all its functionality. It follows a Singleton pattern."}],"identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDK","type":"topic","url":"\/documentation\/pacemakerradio\/automixsdk"},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/AutomixSDKStatusObserverDelegate":{"url":"\/documentation\/pacemakerradio\/automixsdkstatusobserverdelegate","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDKStatusObserverDelegate","kind":"symbol","navigatorTitle":[{"text":"AutomixSDKStatusObserverDelegate","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"AutomixSDKStatusObserverDelegate protocol defines the methods to be implemented with observing the status of AutomixIQ to reflect it on a UI."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AutomixSDKStatusObserverDelegate"}],"title":"AutomixSDKStatusObserverDelegate"},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio/AutomixSDK/addStatusObserverDelegate(_:)":{"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"addStatusObserverDelegate:"}],"role":"symbol","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio\/AutomixSDK\/addStatusObserverDelegate(_:)","url":"\/documentation\/pacemakerradio\/automixsdk\/addstatusobserverdelegate(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"addStatusObserverDelegate","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"AutomixSDKStatusObserverDelegate","preciseIdentifier":"c:@M@PacemakerRadio@objc(pl)AutomixSDKStatusObserverDelegate"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Adds a new status observer delegate"}],"title":"addStatusObserverDelegate(_:)"},"doc://org.cocoapods.PacemakerRadio/documentation/PacemakerRadio":{"abstract":[{"type":"text","text":"Broadcast your playlist, mix, or set along with your voice, to the world. Tune in to other broadcasts and jump in the conversation with comments, or show your support with quick reactions. An interactive UI for AutomixIQ."}],"type":"topic","title":"PacemakerRadio","identifier":"doc:\/\/org.cocoapods.PacemakerRadio\/documentation\/PacemakerRadio","role":"collection","kind":"symbol","url":"\/documentation\/pacemakerradio"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"value":"occ","op":"replace","path":"\/identifier\/interfaceLanguage"},{"path":"\/metadata\/roleHeading","value":"Instance Method","op":"replace"},{"op":"replace","path":"\/metadata\/title","value":"addStatusObserverDelegate:"},{"op":"replace","path":"\/metadata\/symbolKind","value":"method"},{"path":"\/metadata\/fragments","value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"addStatusObserverDelegate:"}],"op":"replace"},{"value":null,"path":"\/topicSections","op":"add"},{"value":null,"path":"\/relationshipsSections","op":"add"},{"op":"add","path":"\/seeAlsoSections","value":null},{"path":"\/primaryContentSections\/0","op":"replace","value":{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"kind":"text","text":"- ("},{"text":"void","preciseIdentifier":"c:v","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"identifier","text":"addStatusObserverDelegate:"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:Qo@M@PacemakerRadio@objc(pl)AutomixSDKStatusObserverDelegate","text":"id<AutomixSDKStatusObserverDelegate>"},{"text":") ","kind":"text"},{"text":"statusObserverDelegate","kind":"internalParam"},{"text":";","kind":"text"}]}]}},{"value":{"parameters":[{"content":[{"inlineContent":[{"text":"The delegate to add.","type":"text"}],"type":"paragraph"}],"name":"statusObserverDelegate"}],"kind":"parameters"},"op":"replace","path":"\/primaryContentSections\/1"},{"value":"AutomixSDK","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDK\/title","op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDK\/fragments","value":[{"text":"AutomixSDK","kind":"identifier"}],"op":"replace"},{"value":[{"kind":"identifier","text":"AutomixSDK"}],"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDK\/navigatorTitle"},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDKStatusObserverDelegate\/title","value":"AutomixSDKStatusObserverDelegate"},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDKStatusObserverDelegate\/fragments","value":[{"kind":"identifier","text":"AutomixSDKStatusObserverDelegate"}],"op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDKStatusObserverDelegate\/navigatorTitle","op":"replace","value":[{"text":"AutomixSDKStatusObserverDelegate","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDK~1addStatusObserverDelegate(_:)\/title","value":"addStatusObserverDelegate:"},{"path":"\/references\/doc:~1~1org.cocoapods.PacemakerRadio~1documentation~1PacemakerRadio~1AutomixSDK~1addStatusObserverDelegate(_:)\/fragments","value":[{"text":"- ","kind":"text"},{"text":"addStatusObserverDelegate:","kind":"identifier"}],"op":"replace"}]}]}