{"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Receiving-status-updates","type":"heading","text":"Receiving status updates"},{"type":"paragraph","inlineContent":[{"text":"AutomixIQ reports its state via ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixSDKStatusObserverDelegate","isActive":true},{"text":". This delegate reports the status via its statusChanged method every time the status changes. The function specifies the current status and the variables that were altered since the last time an update was issued. Use the status variables to update the content of your player UI.","type":"text"}]},{"code":["public class MyPlayer: NSObject, AutomixSDKStatusObserverDelegate {","    \/\/ ...","","    var latestStatus: AutomixSDKStatus? = nil","    public func statusChanged(variables: [NSNumber], status: AutomixSDKStatus) {","        self.latestStatus = status","        let mirror = Mirror(reflecting: status)","        for propertyInt in variables {","            guard let property: AutomixSDKStatusVariable = AutomixSDKStatusVariable.init(rawValue: propertyInt.intValue) else {","                continue","            }","            \/\/ Update my UI here ->","            switch property {","                case .playing:","                    break","                case .mixing:","                    break","                case .playingTrackIdentifier:","                    break","                case .playingTrackIndex:","                    break","                case .playingTrackIndexInternal:","                    break","                case .playingTrackCurrentTime:","                    break","                case .playingTrackCurrentTimeInternal:","                    break","                case .playingTrackTotalTime:","                    break","                case .playingTrackStreamingProgress:","                    break","                case .canSkipToPrevious:","                    break","                case .canSkipToNext:","                    break","                case .canBack:","                    break","                case .canPlayPause:","                    break","                case .canSeek:","                    break","                case .canReorderTracks:","                    break","                case .replayOn:","                    break","                case .readyToPlay:","                    break","                case .canMixNow:","                    break","                case .playlist:","                    break","                case .muted:","                    break","                case .playSpeed:","                    break","                case .normalisedVolume:","                    break","                case .preferredTransitionDurationSeconds:","                    break","                case .requestedLoopTrackIdentifier:","                    break","                case .requestedPauseTrackIdentifier:","                    break","                case .vinylStartStop:","                    break","                case .nextTransitionDuration:","                    break","                case .transitionStartTimeSeconds:","                    break","                case .failedTrackLoadIdentifiers:","                    break","                case .canOnOff:","                    break","                case .playingTrackOriginalSessionId:","                    break","                case .explicitLyricsFiltering:","                    break","                case .mixId:","                    break","            }","        }","    }","","","    \/\/ ...","}"],"type":"codeListing","syntax":"swift"},{"text":"Receiving playback events","level":2,"type":"heading","anchor":"Receiving-playback-events"},{"inlineContent":[{"type":"text","text":"When a playback event happens, AutomixIQ calls the status observer delegate method:"}],"type":"paragraph"},{"type":"codeListing","code":["public class MyPlayer: NSObject, AutomixSDKStatusObserverDelegate {","    \/\/ ...","","    public func playbackEvent(type: AutomixSDKPlaybackEventType, identifier: String?, originalSessionId: String?, status: AutomixSDKStatus?) {","        switch (type) {","            case .trackPlayStart:","                break;","            case .trackPlayPlayed5Secs:","                break;","            case .trackPlayHeartbeat30Secs:","                break;","            case .trackPlayStartMixingIntoNext:","                break;","            case .trackPlaySkipped:","                break;","            case .trackPlayFinished:","                break;","            case .mixPlaybackEnded:","                break;","        }","    }","    \/\/ ...","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"The type of playback event is modelled by the enum ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixSDKPlaybackEventType"}]},{"level":2,"text":"Accessing waveform data","type":"heading","anchor":"Accessing-waveform-data"},{"type":"paragraph","inlineContent":[{"text":"When waveform data for a track is available, AutomixIQ calls the observer delegate method:","type":"text"}]},{"code":["public class MyPlayer: NSObject, AutomixSDKStatusObserverDelegate {","    \/\/ ...","","    public func waveformDataAvailable(identifier: String) {","        let waveformData = AutomixSDK.waveformDataForTrack(identifier: identifier, applyTransitions: false)","        guard let xValues = waveformData.xAxis","              let yValues = waveformData.yAxis else {","            return","        }","        \/\/\/ Render things on screen, etc.","    }","    \/\/ ...","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Please refer to "},{"type":"reference","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/Accessing-waveform-data-article","isActive":true}]},{"anchor":"The-AutomixIQ-status","type":"heading","text":"The AutomixIQ status","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The status of AutomixIQ is modelled by "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixSDKStatus"},{"text":":","type":"text"}]},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixSDKStatus","isActive":true,"type":"reference"}]}]}],"hierarchy":{"paths":[["doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"abstract":[{"type":"text","text":"How to create a UI to reflect the AutomixIQ player"}],"seeAlsoSections":[{"generated":true,"title":"Updating custom playerâ€™s UI","identifiers":["doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixSDKStatusObserverDelegate","doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixSDKPlaybackEventType"]}],"metadata":{"roleHeading":"Article","title":"Updating your player UI","role":"article","modules":[{"name":"AutomixIQ"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/automixiq\/updating-custom-player's-ui-article"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/automixiq\/updating-custom-player's-ui-article"]}],"kind":"article","identifier":{"url":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/Updating-custom-player's-UI-article","interfaceLanguage":"swift"},"references":{"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/AutomixSDKStatus":{"kind":"symbol","abstract":[{"text":"AutomixSDKStatus models the State of the AutomixSDK during playback.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"AutomixSDKStatus","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AutomixSDKStatus"}],"title":"AutomixSDKStatus","role":"symbol","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixSDKStatus","url":"\/documentation\/automixiq\/automixsdkstatus"},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/AutomixSDKStatusObserverDelegate":{"abstract":[{"type":"text","text":"AutomixSDKStatusObserverDelegate protocol defines the methods to be implemented with observing the status of AutomixIQ to reflect it on a UI."}],"role":"symbol","url":"\/documentation\/automixiq\/automixsdkstatusobserverdelegate","title":"AutomixSDKStatusObserverDelegate","navigatorTitle":[{"text":"AutomixSDKStatusObserverDelegate","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AutomixSDKStatusObserverDelegate"}],"kind":"symbol","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixSDKStatusObserverDelegate","type":"topic"},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/Accessing-waveform-data-article":{"type":"topic","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/Accessing-waveform-data-article","title":"Accessing waveform data","url":"\/documentation\/automixiq\/accessing-waveform-data-article","abstract":[],"kind":"article","role":"article"},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ/AutomixSDKPlaybackEventType":{"kind":"symbol","url":"\/documentation\/automixiq\/automixsdkplaybackeventtype","abstract":[{"text":"AutomixSDKPlaybackEventType is an enum of all the available playback events","type":"text"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AutomixSDKPlaybackEventType","kind":"identifier"}],"identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixSDKPlaybackEventType","title":"AutomixSDKPlaybackEventType","navigatorTitle":[{"kind":"identifier","text":"AutomixSDKPlaybackEventType"}],"type":"topic"},"doc://org.cocoapods.AutomixIQ/documentation/AutomixIQ":{"abstract":[{"type":"text","text":"Enable smooth transitions between tracks for a seamlessly beat-matched experience within your iOS music application."}],"role":"collection","url":"\/documentation\/automixiq","title":"AutomixIQ","kind":"symbol","identifier":"doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ","type":"topic"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"value":null,"op":"add","path":"\/topicSections"},{"op":"replace","path":"\/seeAlsoSections","value":[{"generated":true,"title":"Updating custom playerâ€™s UI","identifiers":["doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixSDKStatusObserverDelegate","doc:\/\/org.cocoapods.AutomixIQ\/documentation\/AutomixIQ\/AutomixSDKPlaybackEventType"]}]},{"path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixSDKStatus\/title","op":"replace","value":"AutomixSDKStatus"},{"value":[{"kind":"identifier","text":"AutomixSDKStatus"}],"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixSDKStatus\/fragments"},{"value":"AutomixSDKStatusObserverDelegate","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixSDKStatusObserverDelegate\/title","op":"replace"},{"path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixSDKStatusObserverDelegate\/fragments","op":"replace","value":[{"kind":"identifier","text":"AutomixSDKStatusObserverDelegate"}]},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixSDKPlaybackEventType\/title","value":"AutomixSDKPlaybackEventType"},{"op":"replace","path":"\/references\/doc:~1~1org.cocoapods.AutomixIQ~1documentation~1AutomixIQ~1AutomixSDKPlaybackEventType\/fragments","value":[{"kind":"identifier","text":"AutomixSDKPlaybackEventType"}]}]}]}